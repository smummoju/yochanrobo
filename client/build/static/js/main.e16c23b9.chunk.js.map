{"version":3,"sources":["services/index.js","pages/Grid/CellItem.js","pages/Grid/Grid.js","pages/Login/Login.js","pages/Result/Result.js","App.js","reportWebVitals.js","index.js"],"names":["fetchPlayerDetails","email","fetch","then","res","json","result","err","console","log","createNewPlayer","data","body","method","headers","JSON","stringify","response","catch","error","CellItem","subSc","feedback","currentPosition","rowIndex","columnIndex","path","i","length","coord","r","c","state","homeElement","lastR","lastC","positionElement","className","icon","faRobot","faHome","Grid","query","URLSearchParams","useLocation","search","history","useHistory","useState","name","playerData","setPlayerData","useEffect","get","loadPlayerState","goToLogin","push","reloadState","parse","addFeedback","f","position","arr","Array","map","u","TableContainer","component","Paper","Table","TableBody","row","TableRow","column","TableCell","align","Stack","spacing","direction","Button","variant","onClick","savePlayerData","success","inputFieldValues","label","id","initialFormValues","formSubmitted","Login","values","setValues","errors","setErrors","handleInputValue","e","target","value","fieldValues","temp","test","validate","formIsValid","isValid","Object","every","x","handleFormSubmit","a","preventDefault","autoComplete","onSubmit","inputFieldValue","index","TextField","onChange","onBlur","style","margin","multiline","rows","formControlProps","fullWidth","helperText","type","color","disabled","Result","TableHead","step","sx","border","scope","App","AppBar","Toolbar","Typography","flexGrow","window","location","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAEMA,EAAqB,SAACC,GAC1B,OAAOC,MAAM,yBAAD,OAA0BD,IACnCE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAACG,GACC,OAAKA,GACI,MAIX,SAACC,GACCC,QAAQC,IAAIF,OAKdG,EAAkB,SAACC,GACvB,IAAMC,EAAOD,EAEb,OADAH,QAAQC,IAAIG,GACLV,MAAM,sBAAuB,CAClCW,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBF,KAAMG,KAAKC,UAAUL,KAEpBR,MAAK,SAACc,GAAD,OAAcA,EAASZ,UAC5BF,MAAK,SAACQ,GAEL,OADAH,QAAQC,IAAI,WAAYE,GACjBA,KAERO,OAAM,SAACC,GACNX,QAAQW,MAAM,SAAUA,O,6FCcfC,MA3Cf,YAIE,IAJmE,IAC/DC,EACAC,EAFcC,EAAgD,EAAhDA,gBAAiBC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,KAIjDC,EAAI,EAAGA,EAAID,EAAKE,OAAQD,IAAK,CACpC,kBAAeD,EAAKC,GAAGE,MAAvB,GAAOC,EAAP,KAAUC,EAAV,KACID,IAAMN,GAAYO,IAAMN,IAC1BJ,EAAQM,EAAI,EACZL,EAAWI,EAAKC,GAAGK,OAKvB,IAcIC,EAdJ,cAAuBP,EAAKA,EAAKE,OAAS,GAAGC,MAA7C,GAAOK,EAAP,KAAcC,EAAd,KAEIC,EACF,qBAAKC,UAAU,WAAf,kCAEF,cAAeX,EAAKH,GAAiBM,MAArC,GAAOC,EAAP,KAAUC,EAAV,KAcA,OAbID,IAAMN,GAAYO,IAAMN,IAC1BW,EACE,qBAAKC,UAAU,WAAf,SACE,cAAC,IAAD,CAAiBC,KAAMC,SAMzBf,IAAaU,GAAST,IAAgBU,IACxCF,EAAc,cAAC,IAAD,CAAiBK,KAAME,OAIrC,sBAAKH,UAAU,iBAAf,UACGJ,GAA4BG,EAC7B,qBAAKC,UAAU,WAAf,SAA2Bf,IAC3B,qBAAKe,UAAU,YAAf,SACE,qBAAKA,UAAU,WAAf,SAA2BhB,U,kBCmHpBoB,MAxIf,WACE,IAAIC,EAJG,IAAIC,gBAAgBC,cAAcC,QAKnCC,EAAUC,cAChB,EAAoCC,mBAAS,CAC3CC,KAAM,GACNhD,MAAO,GACPU,KAAM,CACJY,gBAAiB,EACjBG,KAAM,CACJ,CAAEG,MAAO,CAAC,EAAG,GAAIG,MAAO,IACxB,CAAEH,MAAO,CAAC,EAAG,GAAIG,MAAO,IACxB,CAAEH,MAAO,CAAC,EAAG,GAAIG,MAAO,IACxB,CAAEH,MAAO,CAAC,EAAG,GAAIG,MAAO,IACxB,CAAEH,MAAO,CAAC,EAAG,GAAIG,MAAO,IACxB,CAAEH,MAAO,CAAC,EAAG,GAAIG,MAAO,IACxB,CAAEH,MAAO,CAAC,EAAG,GAAIG,MAAO,QAZ9B,mBAAOkB,EAAP,KAAmBC,EAAnB,KAiBAC,qBAAU,WACR,IAAMnD,EAAQyC,EAAMW,IAAI,SACxBC,EAAgBrD,KACf,IAEH,IAAMsD,EAAY,WAChBT,EAAQU,KAAK,WAGTF,EAAkB,SAACrD,GAClBA,GACHsD,IAEFvD,EAAmBC,GAAOE,MAAK,SAACc,GAE1BA,EACFkC,EAAclC,GAEdsC,QAKAE,EAAc,WAClBN,EAAcpC,KAAK2C,MAAM3C,KAAKC,UAAUkC,MAkBpCS,EAAc,SAACC,GACnB,IAAMC,EAAWX,EAAWvC,KAAKY,gBACjC2B,EAAWvC,KAAKe,KAAKmC,GAAU7B,MAAQ4B,EACvCH,KAWIK,EAAM,YAAIC,MAAM,IAAIC,KAAI,SAACC,EAAGtC,GAAJ,OAAUA,KAExC,OACE,qBAAKU,UAAU,OAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC6B,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,cAACC,EAAA,EAAD,CAAO,aAAW,eAAlB,SACE,cAACC,EAAA,EAAD,UACGR,EAAIE,KAAI,SAACO,EAAK/C,GAAN,OACP,cAACgD,EAAA,EAAD,UACGV,EAAIE,KAAI,SAACS,EAAQhD,GAChB,OACE,cAACiD,EAAA,EAAD,CAAWC,MAAM,SAAStC,UAAU,OAApC,SACE,cAAC,EAAD,CACEb,SAAUA,EACVC,YAAaA,EACbC,KAAMwB,EAAWvC,KAAKe,KACtBH,gBAAiB2B,EAAWvC,KAAKY,wBAR5BC,cAmBzB,qBAAKa,UAAU,gBAAf,SACE,eAACuC,EAAA,EAAD,CAAOC,QAAS,EAAGC,UAAU,MAA7B,UACE,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QArDnB,WACf/B,EAAWvC,KAAKY,gBAAkB,GAAK,IACzC2B,EAAWvC,KAAKY,gBAAkB2B,EAAWvC,KAAKY,gBAAkB,GAEtEkC,KAiDU,4BAGA,cAACsB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAhElB,WACpBzE,QAAQC,IAAI,QACRyC,EAAWvC,KAAKY,gBAAkB,EAAI2B,EAAWvC,KAAKe,KAAKE,SAC7DsB,EAAWvC,KAAKY,gBAAkB2B,EAAWvC,KAAKY,gBAAkB,GAEtEkC,KA2DU,wBAGA,cAACsB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QA9CZ,YFnDP,SAACtE,GACtB,IAAMC,EAAOD,EACb,OAAOT,MAAM,sBAAuB,CAClCW,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBF,KAAMG,KAAKC,UAAUJ,KAEpBT,MAAK,SAACc,GAAD,OAAcA,EAASZ,UAC5BF,MAAK,SAACQ,GAEL,OADAH,QAAQC,IAAI,WAAYE,GACjBA,KAERO,OAAM,SAACC,GACNX,QAAQW,MAAM,SAAUA,OEqC1B+D,CAAehC,GAAY/C,MAAK,SAACc,GAC3BA,GAAYA,EAASkE,SACvBrC,EAAQU,KAAR,yBAA+BN,EAAWjD,YA2CpC,4BAMN,qBAAKoC,UAAU,qBAAf,SACE,eAACuC,EAAA,EAAD,CAAOC,QAAS,EAAGC,UAAU,SAA7B,UACE,0CACA,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMtB,EAAY,MAAvD,eAGA,cAACoB,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAS,kBAAMtB,EAAY,MAAvD,0B,iDC3INyB,G,MAAmB,CACvB,CACEnC,KAAM,OACNoC,MAAO,OACPC,GAAI,QAEN,CACErC,KAAM,QACNoC,MAAO,QACPC,GAAI,WAIFC,EAAoB,CACxBtC,KAAM,GACNhD,MAAO,GACPuF,eAAe,EACfL,SAAS,GAyIIM,EAtID,WACZ,MAA4BzC,mBAASuC,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA4B3C,mBAAS,IAArC,mBAAO4C,EAAP,KAAeC,EAAf,KACM/C,EAAUC,cAqBV+C,EAAmB,SAACC,GACxB,MAAwBA,EAAEC,OAAlB/C,EAAR,EAAQA,KAAMgD,EAAd,EAAcA,MACdN,EAAU,2BACLD,GADI,kBAENzC,EAAOgD,KAvBK,WAA2B,IAA1BC,EAAyB,uDAAXR,EAC1BS,EAAI,eAAQP,GAEZ,SAAUM,IACZC,EAAKlD,KAAOiD,EAAYjD,KAAO,GAAK,2BAElC,UAAWiD,IACbC,EAAKlG,MAAQiG,EAAYjG,MAAQ,GAAK,0BAClCiG,EAAYjG,QACdkG,EAAKlG,MAAQ,6BAA6BmG,KAAKF,EAAYjG,OACvD,GACA,wBAGR4F,EAAU,eACLM,IAULE,CAAS,eAAGpD,EAAOgD,KAmBfK,EAAc,WAA2B,IAA1BJ,EAAyB,uDAAXR,EAC3Ba,EACJL,EAAYjD,MACZiD,EAAYjG,OACZuG,OAAOd,OAAOE,GAAQa,OAAM,SAACC,GAAD,MAAa,KAANA,KAErC,OAAOH,GAGHI,EAAgB,uCAAG,WAAOZ,GAAP,eAAAa,EAAA,sDACvBb,EAAEc,iBAEAL,OAAOd,OAAOE,GAAQa,OAAM,SAACC,GAAD,MAAa,KAANA,MAAaJ,MAI1C1F,EAAO,CACXX,MAAOyF,EAAOzF,MACdgD,KAAMyC,EAAOzC,KACbtC,KAAM,CACJY,gBAAiB,EACjBG,KAAM,CACJ,CAAEG,MAAO,CAAC,EAAG,GAAIG,MAAO,IACxB,CAAEH,MAAO,CAAC,EAAG,GAAIG,MAAO,IACxB,CAAEH,MAAO,CAAC,EAAG,GAAIG,MAAO,IACxB,CAAEH,MAAO,CAAC,EAAG,GAAIG,MAAO,IACxB,CAAEH,MAAO,CAAC,EAAG,GAAIG,MAAO,IACxB,CAAEH,MAAO,CAAC,EAAG,GAAIG,MAAO,IACxB,CAAEH,MAAO,CAAC,EAAG,GAAIG,MAAO,OAK9BtB,EAAgBE,GAAMT,MAAK,SAACc,GACtBA,GAAYA,EAASkE,SACvBrC,EAAQU,KAAR,uBAA6BkC,EAAOzF,YA1BnB,2CAAH,sDAkCtB,OACE,qBAAKoC,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,uBAAMyE,aAAa,MAAMC,SAAUJ,EAAkBtE,UAAU,OAA/D,UACG+C,EAAiBpB,KAAI,SAACgD,EAAiBC,GAAW,IAAD,IAChD,OACE,cAACC,EAAA,EAAD,aAEEC,SAAUrB,EACVsB,OAAQtB,EACRuB,MAAO,CAAEC,OAAQ,IACjBrE,KAAM+D,EAAgB/D,KACtBoC,MAAO2B,EAAgB3B,MACvBlE,MAAOyE,EAAOoB,EAAgB/D,MAC9BsE,UAAS,UAAEP,EAAgBO,iBAAlB,SAETC,KAAI,UAAER,EAAgBQ,YAAlB,QAA0B,EAC9BV,aAAa,OACbW,iBAAkB,CAChBC,WAAW,IAER9B,EAAOoB,EAAgB/D,OAAS,CACnC9B,OAAO,EACPwG,WAAY/B,EAAOoB,EAAgB/D,QAhBhCgE,MAqBX,cAAClC,EAAA,EAAD,CACEC,QAAQ,YACR4C,KAAK,SACLC,MAAM,YACNC,UAAWxB,IAJb,2B,gBCnCKyB,MAhGf,WACE,IAAIrF,EAJG,IAAIC,gBAAgBC,cAAcC,QAKnCC,EAAUC,cAChB,EAAoCC,mBAAS,CAC3CC,KAAM,GACNhD,MAAO,GACPU,KAAM,CACJY,gBAAiB,EACjBG,KAAM,MALV,mBAAOwB,EAAP,KAAmBC,EAAnB,KASMI,EAAY,WAChBT,EAAQU,KAAK,WAsBf,OALAJ,qBAAU,YAdc,SAACnD,GAClBA,GACHsD,IAEFvD,EAAmBC,GAAOE,MAAK,SAACc,GAE1BA,EACFkC,EAAclC,GAEdsC,OAOJD,CADcZ,EAAMW,IAAI,YAEvB,IAGD,qBAAKhB,UAAU,cAAf,SACE,sBAAKA,UAAU,eAAf,UACE,gDACA,cAAC6B,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,cAACC,EAAA,EAAD,CAAO,aAAW,eAAlB,SACE,eAACC,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAWC,MAAM,SAAStC,UAAU,OAApC,kBAIA,cAACqC,EAAA,EAAD,CAAWC,MAAM,SAAStC,UAAU,OAApC,SACGa,EAAWD,UAGhB,eAACuB,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAWC,MAAM,SAAStC,UAAU,OAApC,mBAIA,cAACqC,EAAA,EAAD,CAAWC,MAAM,SAAStC,UAAU,OAApC,SACGa,EAAWjD,kBAMtB,8CACA,cAACiE,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAO,aAAW,eAAlB,UACE,cAAC2D,EAAA,EAAD,UACE,eAACxD,EAAA,EAAD,WACE,cAACE,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,8CAEF,cAACD,EAAA,EAAD,CAAWC,MAAM,SAAjB,SACE,6CAIN,cAACL,EAAA,EAAD,UACGpB,EAAWvC,KAAKe,KAAKsC,KAAI,SAACiE,EAAMhB,GAAP,OACxB,eAACzC,EAAA,EAAD,CAEE0D,GAAI,CAAE,mCAAoC,CAAEC,OAAQ,IAFtD,UAIE,cAACzD,EAAA,EAAD,CAAWP,UAAU,KAAKiE,MAAM,MAAMzD,MAAM,SAA5C,oBACOsD,EAAKpG,MAAM,GADlB,YACwBoG,EAAKpG,MAAM,GADnC,OAGA,cAAC6C,EAAA,EAAD,CAAWC,MAAM,SAAjB,SAA2BsD,EAAKjG,UAN3BiF,mB,2BC/CRoB,MAtCf,WAGE,OAFgBtF,cAGd,eAAC,IAAD,WACE,cAACuF,EAAA,EAAD,CAAQzE,SAAS,SAAjB,SACE,cAAC0E,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACExD,QAAQ,KACRb,UAAU,MACV+D,GAAI,CAAEO,SAAU,GAChBxD,QAAS,WACPyD,OAAOC,SAASC,KAAO,KAL3B,6BAcJ,qBAAKvG,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOX,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,eC7BGmH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5I,MAAK,YAAkD,IAA/C6I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.e16c23b9.chunk.js","sourcesContent":["// const serverURL = \"http://localhost:5000\";\n\nconst fetchPlayerDetails = (email) => {\n  return fetch(`/api/player/get?email=${email}`)\n    .then((res) => res.json())\n    .then(\n      (result) => {\n        if (!result) {\n          return {};\n        }\n        return result;\n      },\n      (err) => {\n        console.log(err);\n      }\n    );\n};\n\nconst createNewPlayer = (data) => {\n  const body = data;\n  console.log(body);\n  return fetch(\"/api/player/create/\", {\n    method: \"POST\", // or 'PUT'\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(\"Success:\", data);\n      return data;\n    })\n    .catch((error) => {\n      console.error(\"Error:\", error);\n    });\n};\n\nconst savePlayerData = (data) => {\n  const body = data;\n  return fetch(\"/api/player/update/\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(body),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(\"Success:\", data);\n      return data;\n    })\n    .catch((error) => {\n      console.error(\"Error:\", error);\n    });\n};\n\nexport { fetchPlayerDetails, createNewPlayer, savePlayerData };\n","import React from \"react\";\nimport \"./cellItem.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRobot, faHome } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction CellItem({ currentPosition, rowIndex, columnIndex, path }) {\n  let subSc;\n  let feedback;\n\n  for (let i = 0; i < path.length; i++) {\n    const [r, c] = path[i].coord;\n    if (r === rowIndex && c === columnIndex) {\n      subSc = i + 1;\n      feedback = path[i].state;\n    }\n    <i class=\"fas fa-robot\"></i>;\n  }\n\n  const [lastR, lastC] = path[path.length - 1].coord;\n\n  let positionElement = (\n    <div className=\"position\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</div>\n  );\n  const [r, c] = path[currentPosition].coord;\n  if (r === rowIndex && c === columnIndex) {\n    positionElement = (\n      <div className=\"position\">\n        <FontAwesomeIcon icon={faRobot} />\n      </div>\n    );\n  }\n\n  let homeElement;\n  if (rowIndex === lastR && columnIndex === lastC) {\n    homeElement = <FontAwesomeIcon icon={faHome} />;\n  }\n\n  return (\n    <div className=\"cell-container\">\n      {homeElement ? homeElement : positionElement}\n      <div className=\"feedback\">{feedback}</div>\n      <div className=\"subscript\">\n        <div className=\"subinner\">{subSc}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default CellItem;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchPlayerDetails, savePlayerData } from \"../../services\";\nimport \"./Grid.css\";\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport CellItem from \"./CellItem\";\n\nimport Stack from \"@mui/material/Stack\";\nimport Button from \"@mui/material/Button\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction Grid() {\n  let query = useQuery();\n  const history = useHistory();\n  const [playerData, setPlayerData] = useState({\n    name: \"\",\n    email: \"\",\n    data: {\n      currentPosition: 0,\n      path: [\n        { coord: [3, 0], state: \"\" },\n        { coord: [3, 1], state: \"\" },\n        { coord: [3, 2], state: \"\" },\n        { coord: [3, 3], state: \"\" },\n        { coord: [2, 3], state: \"\" },\n        { coord: [1, 3], state: \"\" },\n        { coord: [0, 3], state: \"\" },\n      ],\n    },\n  });\n\n  useEffect(() => {\n    const email = query.get(\"email\");\n    loadPlayerState(email);\n  }, []);\n\n  const goToLogin = () => {\n    history.push(\"/login\");\n  };\n\n  const loadPlayerState = (email) => {\n    if (!email) {\n      goToLogin();\n    }\n    fetchPlayerDetails(email).then((response) => {\n      // handle no data\n      if (response) {\n        setPlayerData(response);\n      } else {\n        goToLogin();\n      }\n    });\n  };\n\n  const reloadState = () => {\n    setPlayerData(JSON.parse(JSON.stringify(playerData)));\n  };\n\n  const moveNextState = () => {\n    console.log(\"Cikc\");\n    if (playerData.data.currentPosition + 1 < playerData.data.path.length) {\n      playerData.data.currentPosition = playerData.data.currentPosition + 1;\n    }\n    reloadState();\n  };\n\n  const movePreState = () => {\n    if (playerData.data.currentPosition - 1 >= 0) {\n      playerData.data.currentPosition = playerData.data.currentPosition - 1;\n    }\n    reloadState();\n  };\n\n  const addFeedback = (f) => {\n    const position = playerData.data.currentPosition;\n    playerData.data.path[position].state = f;\n    reloadState();\n  };\n\n  const submitPlayerDetails = () => {\n    savePlayerData(playerData).then((response) => {\n      if (response && response.success) {\n        history.push(`/result/?email=${playerData.email}`);\n      }\n    });\n  };\n\n  const arr = [...Array(4)].map((u, i) => i);\n\n  return (\n    <div className=\"grid\">\n      <div className=\"feedbacksplit\">\n        <div className=\"main\">\n          <div className=\"grid-container\">\n            <TableContainer component={Paper}>\n              <Table aria-label=\"simple table\">\n                <TableBody>\n                  {arr.map((row, rowIndex) => (\n                    <TableRow key={rowIndex}>\n                      {arr.map((column, columnIndex) => {\n                        return (\n                          <TableCell align=\"center\" className=\"cell\">\n                            <CellItem\n                              rowIndex={rowIndex}\n                              columnIndex={columnIndex}\n                              path={playerData.data.path}\n                              currentPosition={playerData.data.currentPosition}\n                            />\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </div>\n          <div className=\"bts-container\">\n            <Stack spacing={2} direction=\"row\">\n              <Button variant=\"contained\" onClick={movePreState}>\n                Previous State\n              </Button>\n              <Button variant=\"contained\" onClick={moveNextState}>\n                Next State\n              </Button>\n              <Button variant=\"contained\" onClick={submitPlayerDetails}>\n                Submit\n              </Button>\n            </Stack>\n          </div>\n        </div>\n        <div className=\"feedback-container\">\n          <Stack spacing={2} direction=\"column\">\n            <h3>Feedback</h3>\n            <Button variant=\"contained\" onClick={() => addFeedback(\"+\")}>\n              +\n            </Button>\n            <Button variant=\"contained\" onClick={() => addFeedback(\"-\")}>\n              -\n            </Button>\n          </Stack>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Grid;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport TextField from \"@mui/material/TextField\";\nimport Button from \"@mui/material/Button\";\nimport \"./styles.css\";\nimport { createNewPlayer, getPlayerDetails } from \"../../services\";\n\nconst inputFieldValues = [\n  {\n    name: \"name\",\n    label: \"Name\",\n    id: \"name\",\n  },\n  {\n    name: \"email\",\n    label: \"Email\",\n    id: \"email\",\n  },\n];\n\nconst initialFormValues = {\n  name: \"\",\n  email: \"\",\n  formSubmitted: false,\n  success: false,\n};\n\nconst Login = () => {\n  const [values, setValues] = useState(initialFormValues);\n  const [errors, setErrors] = useState({});\n  const history = useHistory();\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n\n    if (\"name\" in fieldValues)\n      temp.name = fieldValues.name ? \"\" : \"This field is required.\";\n\n    if (\"email\" in fieldValues) {\n      temp.email = fieldValues.email ? \"\" : \"This field is required.\";\n      if (fieldValues.email)\n        temp.email = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/.test(fieldValues.email)\n          ? \"\"\n          : \"Email is not valid.\";\n    }\n\n    setErrors({\n      ...temp,\n    });\n  };\n\n  const handleInputValue = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n    validate({ [name]: value });\n  };\n\n  const handleSuccess = () => {\n    setValues({\n      ...initialFormValues,\n      formSubmitted: true,\n      success: true,\n    });\n  };\n\n  const handleError = () => {\n    setValues({\n      ...initialFormValues,\n      formSubmitted: true,\n      success: false,\n    });\n  };\n\n  const formIsValid = (fieldValues = values) => {\n    const isValid =\n      fieldValues.name &&\n      fieldValues.email &&\n      Object.values(errors).every((x) => x === \"\");\n\n    return isValid;\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n    const isValid =\n      Object.values(errors).every((x) => x === \"\") && formIsValid();\n    if (isValid) {\n      // do stuff\n\n      const body = {\n        email: values.email,\n        name: values.name,\n        data: {\n          currentPosition: 0,\n          path: [\n            { coord: [3, 0], state: \"\" },\n            { coord: [3, 1], state: \"\" },\n            { coord: [3, 2], state: \"\" },\n            { coord: [3, 3], state: \"\" },\n            { coord: [2, 3], state: \"\" },\n            { coord: [1, 3], state: \"\" },\n            { coord: [0, 3], state: \"\" },\n          ],\n        },\n      };\n\n      createNewPlayer(body).then((response) => {\n        if (response && response.success) {\n          history.push(`/grid/?email=${values.email}`);\n        }\n      });\n\n      // console.log(values);\n    }\n  };\n\n  return (\n    <div className=\"loginPage\">\n      <div className=\"form-container\">\n        <form autoComplete=\"off\" onSubmit={handleFormSubmit} className=\"form\">\n          {inputFieldValues.map((inputFieldValue, index) => {\n            return (\n              <TextField\n                key={index}\n                onChange={handleInputValue}\n                onBlur={handleInputValue}\n                style={{ margin: 10 }}\n                name={inputFieldValue.name}\n                label={inputFieldValue.label}\n                error={errors[inputFieldValue.name]}\n                multiline={inputFieldValue.multiline ?? false}\n                // fullWidth\n                rows={inputFieldValue.rows ?? 1}\n                autoComplete=\"none\"\n                formControlProps={{\n                  fullWidth: true,\n                }}\n                {...(errors[inputFieldValue.name] && {\n                  error: true,\n                  helperText: errors[inputFieldValue.name],\n                })}\n              />\n            );\n          })}\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"secondary\"\n            disabled={!formIsValid()}\n          >\n            Login\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { fetchPlayerDetails, savePlayerData } from \"../../services\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport TableHead from \"@mui/material/TableHead\";\nimport \"./Result.css\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction Result() {\n  let query = useQuery();\n  const history = useHistory();\n  const [playerData, setPlayerData] = useState({\n    name: \"\",\n    email: \"\",\n    data: {\n      currentPosition: 0,\n      path: [],\n    },\n  });\n\n  const goToLogin = () => {\n    history.push(\"/login\");\n  };\n\n  const loadPlayerState = (email) => {\n    if (!email) {\n      goToLogin();\n    }\n    fetchPlayerDetails(email).then((response) => {\n      // handle no data\n      if (response) {\n        setPlayerData(response);\n      } else {\n        goToLogin();\n      }\n    });\n  };\n\n  useEffect(() => {\n    const email = query.get(\"email\");\n    loadPlayerState(email);\n  }, []);\n\n  return (\n    <div className=\"result-page\">\n      <div className=\"json-display\">\n        <h2>Player Details</h2>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"simple table\">\n            <TableBody>\n              <TableRow>\n                <TableCell align=\"center\" className=\"cell\">\n                  Name\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"cell\">\n                  {playerData.name}\n                </TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell align=\"center\" className=\"cell\">\n                  Email\n                </TableCell>\n\n                <TableCell align=\"center\" className=\"cell\">\n                  {playerData.email}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <h2>Grid Details</h2>\n        <TableContainer component={Paper}>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">\n                  <b>Coordinates</b>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <b>State</b>\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {playerData.data.path.map((step, index) => (\n                <TableRow\n                  key={index}\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                >\n                  <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                    {`[${step.coord[0]},${step.coord[1]}]`}\n                  </TableCell>\n                  <TableCell align=\"center\">{step.state}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default Result;\n","import \"./App.css\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Grid from \"./pages/Grid/Grid\";\nimport Login from \"./pages/Login/Login\";\nimport Result from \"./pages/Result/Result\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport Typography from \"@mui/material/Typography\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction App() {\n  const history = useHistory();\n\n  return (\n    <Router>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            component=\"div\"\n            sx={{ flexGrow: 1 }}\n            onClick={() => {\n              window.location.href = \"/\";\n            }}\n          >\n            Yochan Robo\n          </Typography>\n          {/* <Button color=\"inherit\">Login</Button> */}\n        </Toolbar>\n      </AppBar>\n\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/result\">\n            <Result />\n          </Route>\n          <Route path=\"/grid\">\n            <Grid />\n          </Route>\n          <Route path=\"/\">\n            <Login />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}